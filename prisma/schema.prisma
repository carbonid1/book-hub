datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Author {
  books     Book[]
  fullName  String   @db.VarChar(255)
  id        String   @id @default(cuid())
  updatedAt DateTime @updatedAt
  imageUrl  String?
  bio       String?
}

model Book {
  authors     Author[]
  editions    Edition[]
  id          String    @id @default(cuid())
  publishedIn DateTime?
}

model Edition {
  id          String    @id @default(cuid())
  updatedAt   DateTime  @updatedAt
  book        Book      @relation(fields: [bookId], references: [id])
  bookId      String
  cover       String?
  description String?
  lang        String?
  publishedIn DateTime?
  reviews     Review[]
  title       String    @db.VarChar(255)
}

model Review {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  body      String
  edition   Edition  @relation(fields: [editionId], references: [id])
  editionId String
  lang      String?
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}
